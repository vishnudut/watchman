# =============================================================================
# EMAIL CONFIGURATION FOR WATCHMAN SECURITY SCANNER
# =============================================================================
# Copy these settings to your main .env file and update with your actual values

# QUICK SETUP FOR HACKATHON (Gmail - Easiest Option):
# 1. Go to https://myaccount.google.com/security
# 2. Enable 2-factor authentication
# 3. Click "App passwords" → Generate password for "Mail"
# 4. Use your Gmail address and app password below
# 5. Add recipient emails separated by commas
# 6. Run: python setup_email.py (for interactive setup)

# =============================================================================
# SMTP EMAIL SETTINGS
# =============================================================================

# Gmail SMTP Configuration (Recommended for hackathon/development)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SENDER_EMAIL=your-email@gmail.com
SENDER_PASSWORD=your-gmail-app-password-here
SENDER_NAME=Watchman Security Scanner

# Alternative SMTP providers:
#
# Outlook/Hotmail:
# SMTP_SERVER=smtp-mail.outlook.com
# SMTP_PORT=587
#
# Yahoo Mail:
# SMTP_SERVER=smtp.mail.yahoo.com
# SMTP_PORT=587
#
# Custom SMTP:
# SMTP_SERVER=your-smtp-server.com
# SMTP_PORT=587 (or 465 for SSL)

# =============================================================================
# EMAIL RECIPIENTS
# =============================================================================

# Default recipients for security notifications (comma-separated)
# These people will receive alerts for all security issues and PRs
NOTIFICATION_RECIPIENTS=developer1@company.com,security-team@company.com,your-email@gmail.com

# Admin recipients for system notifications (comma-separated, optional)
ADMIN_RECIPIENTS=admin@company.com,devops@company.com

# =============================================================================
# EMAIL NOTIFICATION SETTINGS (Optional)
# =============================================================================

# Enable/disable different types of notifications
NOTIFY_SECURITY_ISSUES=true
NOTIFY_PR_CREATION=true
NOTIFY_SCAN_SUMMARY=true

# Minimum severity level for notifications (CRITICAL, HIGH, MEDIUM, LOW)
MIN_NOTIFICATION_SEVERITY=HIGH

# =============================================================================
# SETUP METHODS
# =============================================================================

# Method 1 - Interactive Setup (Easiest):
# python setup_email.py
#
# Method 2 - Manual Setup:
# 1. Copy these settings to your .env file
# 2. Update with your actual email credentials
# 3. Test with: python test_email_config.py
#
# Method 3 - Verify Existing Config:
# python setup_email.py --verify

# =============================================================================
# GMAIL SETUP (DETAILED INSTRUCTIONS)
# =============================================================================

# Step 1: Enable 2-Factor Authentication
# - Go to https://myaccount.google.com/security
# - Turn on 2-Step Verification if not already enabled

# Step 2: Generate App Password
# - In the same security page, find "App passwords"
# - Select "Mail" as the app type
# - Copy the 16-character password generated

# Step 3: Configure Environment Variables
# - SENDER_EMAIL: your Gmail address (e.g., yourname@gmail.com)
# - SENDER_PASSWORD: the 16-character app password (NOT your regular password)
# - NOTIFICATION_RECIPIENTS: who should receive security alerts

# Step 4: Test Configuration
# python test_email_config.py

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common Issues:
# - "Authentication failed": Use app password, not regular password
# - "Connection refused": Check SMTP server and port
# - "No recipients configured": Add NOTIFICATION_RECIPIENTS
# - Emails in spam folder: Check sender reputation, add to contacts

# Testing Commands:
# python test_email_config.py          # Test email configuration
# python email_handler.py              # Test email templates
# python test_email_integration.py     # Test complete workflow with emails

# =============================================================================
# SECURITY REMINDERS
# =============================================================================

# ⚠️  IMPORTANT:
# 1. Never commit .env files with real credentials to version control
# 2. Use app passwords instead of main email passwords
# 3. Regularly rotate app passwords
# 4. Restrict recipient lists to authorized personnel only
# 5. Use environment-specific configs (dev/staging/prod)

# Example production setup:
# NOTIFICATION_RECIPIENTS=security@yourcompany.com,devops-alerts@yourcompany.com
# SENDER_EMAIL=watchman-alerts@yourcompany.com
